--  API2Cart OpenAPI
--  API2Cart
--
--  The version of the OpenAPI document: 1.1
--  Contact: contact@api2cart.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.11.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with .Models;
with Swagger.Clients;
package .Clients is
   pragma Style_Checks ("-bmrIu");

   type Client_Type is new Swagger.Clients.Client_Type with null record;

   --  account.cart.add
   --  Use this method to automate the process of connecting stores to API2Cart. The list of parameters will vary depending on the platform. To get a list of parameters that are specific to a particular shopping platform, you need to execute the account.supported_platforms.json method.
   procedure Account_Cart_Add
      (Client : in out Client_Type;
       Account_Cart_Add_Type : in .Models.AccountCartAdd_Type;
       Result : out .Models.AccountCartAdd200Response_Type);

   --  account.cart.list
   --  This method lets you get a list of online stores connected to your API2Cart account. You can get the number of API requests to each store if you specify a period using parameters (request_from_date, request_to_date). The total_calls field is displayed only if there are parameters (request_from_date, request_to_date).
   procedure Account_Cart_List
      (Client : in out Client_Type;
       Store_Url : in Swagger.Nullable_UString;
       Store_Key : in Swagger.Nullable_UString;
       Request_From_Date : in Swagger.Nullable_UString;
       Request_To_Date : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.AccountCartList200Response_Type);

   --  account.config.update
   --  Use this method to automate the change of credentials used to connect online stores. The list of supported parameters differs depending on the platform.
   procedure Account_Config_Update
      (Client : in out Client_Type;
       Replace_Parameters : in Swagger.Nullable_Boolean;
       New_Store_Url : in Swagger.Nullable_UString;
       New_Store_Key : in Swagger.Nullable_UString;
       Bridge_Url : in Swagger.Nullable_UString;
       Store_Root : in Swagger.Nullable_UString;
       Db_Tables_Prefix : in Swagger.Nullable_UString;
       User_Agent : in Swagger.Nullable_UString;
       P_3dcart_Private_Key : in Swagger.Nullable_UString;
       P_3dcart_Access_Token : in Swagger.Nullable_UString;
       P_3dcartapi_Api_Key : in Swagger.Nullable_UString;
       Amazon_Sp_Client_Id : in Swagger.Nullable_UString;
       Amazon_Sp_Client_Secret : in Swagger.Nullable_UString;
       Amazon_Sp_Refresh_Token : in Swagger.Nullable_UString;
       Amazon_Sp_Aws_Region : in Swagger.Nullable_UString;
       Amazon_Sp_Api_Environment : in Swagger.Nullable_UString;
       Amazon_Seller_Id : in Swagger.Nullable_UString;
       Aspdotnetstorefront_Api_User : in Swagger.Nullable_UString;
       Aspdotnetstorefront_Api_Pass : in Swagger.Nullable_UString;
       Bigcommerceapi_Admin_Account : in Swagger.Nullable_UString;
       Bigcommerceapi_Api_Path : in Swagger.Nullable_UString;
       Bigcommerceapi_Api_Key : in Swagger.Nullable_UString;
       Bigcommerceapi_Client_Id : in Swagger.Nullable_UString;
       Bigcommerceapi_Access_Token : in Swagger.Nullable_UString;
       Bigcommerceapi_Context : in Swagger.Nullable_UString;
       Bol_Api_Key : in Swagger.Nullable_UString;
       Bol_Api_Secret : in Swagger.Nullable_UString;
       Bol_Retailer_Id : in Swagger.Nullable_Integer;
       Demandware_Client_Id : in Swagger.Nullable_UString;
       Demandware_Api_Password : in Swagger.Nullable_UString;
       Demandware_User_Name : in Swagger.Nullable_UString;
       Demandware_User_Password : in Swagger.Nullable_UString;
       Ebay_Client_Id : in Swagger.Nullable_UString;
       Ebay_Client_Secret : in Swagger.Nullable_UString;
       Ebay_Runame : in Swagger.Nullable_UString;
       Ebay_Access_Token : in Swagger.Nullable_UString;
       Ebay_Refresh_Token : in Swagger.Nullable_UString;
       Ebay_Environment : in Swagger.Nullable_UString;
       Ebay_Site_Id : in Swagger.Nullable_Integer;
       Ecwid_Acess_Token : in Swagger.Nullable_UString;
       Ecwid_Store_Id : in Swagger.Nullable_UString;
       Lazada_App_Id : in Swagger.Nullable_UString;
       Lazada_App_Secret : in Swagger.Nullable_UString;
       Lazada_Refresh_Token : in Swagger.Nullable_UString;
       Lazada_Region : in Swagger.Nullable_UString;
       Etsy_Keystring : in Swagger.Nullable_UString;
       Etsy_Shared_Secret : in Swagger.Nullable_UString;
       Etsy_Access_Token : in Swagger.Nullable_UString;
       Etsy_Token_Secret : in Swagger.Nullable_UString;
       Etsy_Client_Id : in Swagger.Nullable_UString;
       Etsy_Refresh_Token : in Swagger.Nullable_UString;
       Facebook_App_Id : in Swagger.Nullable_UString;
       Facebook_App_Secret : in Swagger.Nullable_UString;
       Facebook_Access_Token : in Swagger.Nullable_UString;
       Facebook_Business_Id : in Swagger.Nullable_UString;
       Neto_Api_Key : in Swagger.Nullable_UString;
       Neto_Api_Username : in Swagger.Nullable_UString;
       Shopline_Access_Token : in Swagger.Nullable_UString;
       Shopline_App_Key : in Swagger.Nullable_UString;
       Shopline_App_Secret : in Swagger.Nullable_UString;
       Shopline_Shared_Secret : in Swagger.Nullable_UString;
       Shopify_Access_Token : in Swagger.Nullable_UString;
       Shopify_Api_Key : in Swagger.Nullable_UString;
       Shopify_Api_Password : in Swagger.Nullable_UString;
       Shopify_Shared_Secret : in Swagger.Nullable_UString;
       Shopee_Partner_Id : in Swagger.Nullable_UString;
       Shopee_Partner_Key : in Swagger.Nullable_UString;
       Shopee_Shop_Id : in Swagger.Nullable_UString;
       Shopee_Refresh_Token : in Swagger.Nullable_UString;
       Shopee_Region : in Swagger.Nullable_UString;
       Shopee_Environment : in Swagger.Nullable_UString;
       Shoplazza_Access_Token : in Swagger.Nullable_UString;
       Shoplazza_Shared_Secret : in Swagger.Nullable_UString;
       Miva_Access_Token : in Swagger.Nullable_UString;
       Miva_Signature : in Swagger.Nullable_UString;
       Shopware_Access_Key : in Swagger.Nullable_UString;
       Shopware_Api_Key : in Swagger.Nullable_UString;
       Shopware_Api_Secret : in Swagger.Nullable_UString;
       Bigcartel_User_Name : in Swagger.Nullable_UString;
       Bigcartel_Password : in Swagger.Nullable_UString;
       Volusion_Login : in Swagger.Nullable_UString;
       Volusion_Password : in Swagger.Nullable_UString;
       Walmart_Client_Id : in Swagger.Nullable_UString;
       Walmart_Client_Secret : in Swagger.Nullable_UString;
       Walmart_Environment : in Swagger.Nullable_UString;
       Walmart_Channel_Type : in Swagger.Nullable_UString;
       Walmart_Region : in Swagger.Nullable_UString;
       Square_Client_Id : in Swagger.Nullable_UString;
       Square_Client_Secret : in Swagger.Nullable_UString;
       Square_Refresh_Token : in Swagger.Nullable_UString;
       Squarespace_Api_Key : in Swagger.Nullable_UString;
       Squarespace_Client_Id : in Swagger.Nullable_UString;
       Squarespace_Client_Secret : in Swagger.Nullable_UString;
       Squarespace_Access_Token : in Swagger.Nullable_UString;
       Squarespace_Refresh_Token : in Swagger.Nullable_UString;
       Hybris_Client_Id : in Swagger.Nullable_UString;
       Hybris_Client_Secret : in Swagger.Nullable_UString;
       Hybris_Username : in Swagger.Nullable_UString;
       Hybris_Password : in Swagger.Nullable_UString;
       Hybris_Websites : in Swagger.UString_Vectors.Vector;
       Lightspeed_Api_Key : in Swagger.Nullable_UString;
       Lightspeed_Api_Secret : in Swagger.Nullable_UString;
       Commercehq_Api_Key : in Swagger.Nullable_UString;
       Commercehq_Api_Password : in Swagger.Nullable_UString;
       Wc_Consumer_Key : in Swagger.Nullable_UString;
       Wc_Consumer_Secret : in Swagger.Nullable_UString;
       Magento_Consumer_Key : in Swagger.Nullable_UString;
       Magento_Consumer_Secret : in Swagger.Nullable_UString;
       Magento_Access_Token : in Swagger.Nullable_UString;
       Magento_Token_Secret : in Swagger.Nullable_UString;
       Prestashop_Webservice_Key : in Swagger.Nullable_UString;
       Wix_App_Id : in Swagger.Nullable_UString;
       Wix_App_Secret_Key : in Swagger.Nullable_UString;
       Wix_Instance_Id : in Swagger.Nullable_UString;
       Wix_Refresh_Token : in Swagger.Nullable_UString;
       Mercado_Libre_App_Id : in Swagger.Nullable_UString;
       Mercado_Libre_App_Secret_Key : in Swagger.Nullable_UString;
       Mercado_Libre_Refresh_Token : in Swagger.Nullable_UString;
       Zid_Client_Id : in Swagger.Nullable_Integer;
       Zid_Client_Secret : in Swagger.Nullable_UString;
       Zid_Access_Token : in Swagger.Nullable_UString;
       Zid_Authorization : in Swagger.Nullable_UString;
       Zid_Refresh_Token : in Swagger.Nullable_UString;
       Flipkart_Client_Id : in Swagger.Nullable_UString;
       Flipkart_Client_Secret : in Swagger.Nullable_UString;
       Allegro_Client_Id : in Swagger.Nullable_UString;
       Allegro_Client_Secret : in Swagger.Nullable_UString;
       Allegro_Access_Token : in Swagger.Nullable_UString;
       Allegro_Refresh_Token : in Swagger.Nullable_UString;
       Allegro_Environment : in Swagger.Nullable_UString;
       Zoho_Client_Id : in Swagger.Nullable_UString;
       Zoho_Client_Secret : in Swagger.Nullable_UString;
       Zoho_Refresh_Token : in Swagger.Nullable_UString;
       Zoho_Region : in Swagger.Nullable_UString;
       Tiendanube_User_Id : in Swagger.Nullable_Integer;
       Tiendanube_Access_Token : in Swagger.Nullable_UString;
       Tiendanube_Client_Secret : in Swagger.Nullable_UString;
       Otto_Client_Id : in Swagger.Nullable_UString;
       Otto_Client_Secret : in Swagger.Nullable_UString;
       Otto_App_Id : in Swagger.Nullable_UString;
       Otto_Refresh_Token : in Swagger.Nullable_UString;
       Otto_Environment : in Swagger.Nullable_UString;
       Otto_Access_Token : in Swagger.Nullable_UString;
       Tiktokshop_App_Key : in Swagger.Nullable_UString;
       Tiktokshop_App_Secret : in Swagger.Nullable_UString;
       Tiktokshop_Refresh_Token : in Swagger.Nullable_UString;
       Tiktokshop_Access_Token : in Swagger.Nullable_UString;
       Salla_Client_Id : in Swagger.Nullable_UString;
       Salla_Client_Secret : in Swagger.Nullable_UString;
       Salla_Refresh_Token : in Swagger.Nullable_UString;
       Salla_Access_Token : in Swagger.Nullable_UString;
       Temu_App_Key : in Swagger.Nullable_UString;
       Temu_App_Secret : in Swagger.Nullable_UString;
       Temu_Access_Token : in Swagger.Nullable_UString;
       Temu_Region : in Swagger.Nullable_UString;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  account.failed_webhooks
   --  If the callback of your service for some reason could not accept webhooks from API2Cart, then with the help of this method you can get a list of missed webhooks to perform synchronization again using entity_id. Please note that we keep such records for 24 hours.
   procedure Account_Failed_Webhooks
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Ids : in Swagger.Nullable_UString;
       Result : out .Models.AccountFailedWebhooks200Response_Type);

   --  account.supported_platforms
   --  Use this method to retrieve a list of supported platforms and the sets of parameters required for connecting to each of them. Note: some platforms may have multiple connection methods so that the response will contain multiple sets of parameters.
   procedure Account_Supported_Platforms
      (Client : in out Client_Type;
       Result : out .Models.AccountSupportedPlatforms200Response_Type);

   --  attribute.add
   --  Add new attribute
   procedure Attribute_Add
      (Client : in out Client_Type;
       P_Type : in Swagger.UString;
       Name : in Swagger.UString;
       Code : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Visible : in Swagger.Nullable_Boolean;
       Required : in Swagger.Nullable_Boolean;
       Position : in Swagger.Nullable_Integer;
       Attribute_Group_Id : in Swagger.Nullable_UString;
       Is_Global : in Swagger.Nullable_UString;
       Is_Searchable : in Swagger.Nullable_Boolean;
       Is_Filterable : in Swagger.Nullable_UString;
       Is_Comparable : in Swagger.Nullable_Boolean;
       Is_Html_Allowed_On_Front : in Swagger.Nullable_Boolean;
       Is_Filterable_In_Search : in Swagger.Nullable_Boolean;
       Is_Configurable : in Swagger.Nullable_Boolean;
       Is_Visible_In_Advanced_Search : in Swagger.Nullable_Boolean;
       Is_Used_For_Promo_Rules : in Swagger.Nullable_Boolean;
       Used_In_Product_Listing : in Swagger.Nullable_Boolean;
       Used_For_Sort_By : in Swagger.Nullable_Boolean;
       Apply_To : in Swagger.Nullable_UString;
       Result : out .Models.AttributeAdd200Response_Type);

   --  attribute.assign.group
   --  Assign attribute to the group
   procedure Attribute_Assign_Group
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Group_Id : in Swagger.UString;
       Attribute_Set_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeAssignGroup200Response_Type);

   --  attribute.assign.set
   --  Assign attribute to the attribute set
   procedure Attribute_Assign_Set
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Attribute_Set_Id : in Swagger.UString;
       Group_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeAssignGroup200Response_Type);

   --  attribute.attributeset.list
   --  Get attribute_set list
   procedure Attribute_Attributeset_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseAttributeAttributesetList_Type);

   --  attribute.count
   --  Get attributes count
   procedure Attribute_Count
      (Client : in out Client_Type;
       P_Type : in Swagger.Nullable_UString;
       Attribute_Set_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Visible : in Swagger.Nullable_Boolean;
       Required : in Swagger.Nullable_Boolean;
       System : in Swagger.Nullable_Boolean;
       Result : out .Models.AttributeCount200Response_Type);

   --  attribute.delete
   --  Delete attribute from store
   procedure Attribute_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  attribute.group.list
   --  Get attribute group list
   procedure Attribute_Group_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Attribute_Set_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseAttributeGroupList_Type);

   --  attribute.info
   --  Get information about a specific global attribute by its ID.
   procedure Attribute_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Attribute_Set_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.AttributeInfo200Response_Type);

   --  attribute.list
   --  Get a list of global attributes.
   procedure Attribute_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Attribute_Ids : in Swagger.Nullable_UString;
       Attribute_Set_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       P_Type : in Swagger.Nullable_UString;
       Visible : in Swagger.Nullable_Boolean;
       Required : in Swagger.Nullable_Boolean;
       System : in Swagger.Nullable_Boolean;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseAttributeList_Type);

   --  attribute.type.list
   --  Get list of supported attributes types
   procedure Attribute_Type_List
      (Client : in out Client_Type;
       Result : out .Models.AttributeTypeList200Response_Type);

   --  attribute.unassign.group
   --  Unassign attribute from group
   procedure Attribute_Unassign_Group
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Group_Id : in Swagger.UString;
       Result : out .Models.AttributeUnassignGroup200Response_Type);

   --  attribute.unassign.set
   --  Unassign attribute from attribute set
   procedure Attribute_Unassign_Set
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Attribute_Set_Id : in Swagger.UString;
       Result : out .Models.AttributeUnassignGroup200Response_Type);

   --  attribute.update
   --  Update attribute data
   procedure Attribute_Update
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Name : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeUpdate200Response_Type);

   --  attribute.value.add
   --  Add new value to attribute.
   procedure Attribute_Value_Add
      (Client : in out Client_Type;
       Attribute_Id : in Swagger.UString;
       Name : in Swagger.UString;
       Code : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeAdd200Response_Type);

   --  attribute.value.delete
   --  Delete attribute value.
   procedure Attribute_Value_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Attribute_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeValueDelete200Response_Type);

   --  attribute.value.update
   --  Update attribute value.
   procedure Attribute_Value_Update
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Attribute_Id : in Swagger.UString;
       Name : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Code : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeUpdate200Response_Type);

   --  basket.info
   --  Retrieve basket information.
   procedure Basket_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.BasketInfo200Response_Type);

   --  basket.item.add
   --  Add item to basket
   procedure Basket_Item_Add
      (Client : in out Client_Type;
       Customer_Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Variant_Id : in Swagger.Nullable_UString;
       Quantity : in Swagger.Number;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketItemAdd200Response_Type);

   --  basket.live_shipping_service.create
   --  Create live shipping rate service.
   procedure Basket_Live_Shipping_Service_Create
      (Client : in out Client_Type;
       Name : in Swagger.UString;
       Callback : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketLiveShippingServiceCreate200Response_Type);

   --  basket.live_shipping_service.delete
   --  Delete live shipping rate service.
   procedure Basket_Live_Shipping_Service_Delete
      (Client : in out Client_Type;
       Id : in Integer;
       Result : out .Models.BasketLiveShippingServiceDelete200Response_Type);

   --  basket.live_shipping_service.list
   --  Retrieve a list of live shipping rate services.
   procedure Basket_Live_Shipping_Service_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketLiveShippingServiceList200Response_Type);

   --  batch.job.list
   --  Get list of recent jobs
   procedure Batch_Job_List
      (Client : in out Client_Type;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Processed_From : in Swagger.Nullable_UString;
       Processed_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseBatchJobList_Type);

   --  batch.job.result
   --  Get job result data
   procedure Batch_Job_Result
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Result : out .Models.ResponseBatchJobResult_Type);

   --  bridge.delete
   --  Delete bridge from the store.
   procedure Bridge_Delete
      (Client : in out Client_Type;
       Result : out .Models.AttributeValueDelete200Response_Type);

   --  bridge.download
   --  Download bridge for store.</br>Please note that the method would not work if you call it from Swagger UI.
   procedure Bridge_Download
      (Client : in out Client_Type;
       Whitelabel : in Swagger.Nullable_Boolean;
       Result : out Swagger.Blob_Ref);

   --  bridge.update
   --  Update bridge in the store.
   procedure Bridge_Update
      (Client : in out Client_Type;
       Result : out .Models.AttributeUpdate200Response_Type);

   --  cart.bridge
   --  Get bridge key and store key
   procedure Cart_Bridge
      (Client : in out Client_Type;
       Result : out .Models.CartBridge200Response_Type);

   --  cart.catalog_price_rules.count
   --  Get count of cart catalog price rules discounts.
   procedure Cart_Catalog_Price_Rules_Count
      (Client : in out Client_Type;
       Result : out .Models.CartCatalogPriceRulesCount200Response_Type);

   --  cart.catalog_price_rules.list
   --  Get cart catalog price rules discounts.
   procedure Cart_Catalog_Price_Rules_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartCatalogPriceRulesList_Type);

   --  cart.clear_cache
   --  Clear cache on store.
   procedure Cart_Clear_Cache
      (Client : in out Client_Type;
       Cache_Type : in Swagger.UString;
       Result : out .Models.CartClearCache200Response_Type);

   --  cart.config
   --  Get list of cart configs
   procedure Cart_Config
      (Client : in out Client_Type;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.CartConfig200Response_Type);

   --  cart.config.update
   --  Use this API method to update custom data in client database.
   procedure Cart_Config_Update
      (Client : in out Client_Type;
       Cart_Config_Update_Type : in .Models.CartConfigUpdate_Type;
       Result : out .Models.CartConfigUpdate200Response_Type);

   --  cart.coupon.add
   --  Use this method to create a coupon with specified conditions.
   procedure Cart_Coupon_Add
      (Client : in out Client_Type;
       Cart_Coupon_Add_Type : in .Models.CartCouponAdd_Type;
       Result : out .Models.CartCouponAdd200Response_Type);

   --  cart.coupon.condition.add
   --  Use this method to add additional conditions for coupon application.
   procedure Cart_Coupon_Condition_Add
      (Client : in out Client_Type;
       Coupon_Id : in Swagger.UString;
       Entity : in Swagger.UString;
       Key : in Swagger.UString;
       Operator : in Swagger.UString;
       Value : in Swagger.UString;
       Target : in Swagger.Nullable_UString;
       Include_Tax : in Swagger.Nullable_Boolean;
       Include_Shipping : in Swagger.Nullable_Boolean;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketLiveShippingServiceDelete200Response_Type);

   --  cart.coupon.count
   --  This method allows you to get the number of coupons. On some platforms, you can filter the coupons by the date they were active.
   procedure Cart_Coupon_Count
      (Client : in out Client_Type;
       Store_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Date_Start_From : in Swagger.Nullable_UString;
       Date_Start_To : in Swagger.Nullable_UString;
       Date_End_From : in Swagger.Nullable_UString;
       Date_End_To : in Swagger.Nullable_UString;
       Result : out .Models.CartCouponCount200Response_Type);

   --  cart.coupon.delete
   --  Delete coupon
   procedure Cart_Coupon_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  cart.coupon.list
   --  Get cart coupon discounts.
   procedure Cart_Coupon_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Coupons_Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Date_Start_From : in Swagger.Nullable_UString;
       Date_Start_To : in Swagger.Nullable_UString;
       Date_End_From : in Swagger.Nullable_UString;
       Date_End_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartCouponList_Type);

   --  cart.create
   --  Add store to the account
   procedure Cart_Create
      (Client : in out Client_Type;
       Cart_Create_Type : in .Models.CartCreate_Type;
       Result : out .Models.AccountCartAdd200Response_Type);

   --  cart.delete
   --  Remove store from API2Cart
   procedure Cart_Delete
      (Client : in out Client_Type;
       Delete_Bridge : in Swagger.Nullable_Boolean;
       Result : out .Models.CartDelete200Response_Type);

   --  cart.disconnect
   --  Disconnect with the store and clear store session data.
   procedure Cart_Disconnect
      (Client : in out Client_Type;
       Delete_Bridge : in Swagger.Nullable_Boolean;
       Result : out .Models.CartDisconnect200Response_Type);

   --  cart.giftcard.add
   --  Use this method to create a gift card for a specified amount.
   procedure Cart_Giftcard_Add
      (Client : in out Client_Type;
       Amount : in Swagger.Number;
       Code : in Swagger.Nullable_UString;
       Owner_Email : in Swagger.Nullable_UString;
       Recipient_Email : in Swagger.Nullable_UString;
       Recipient_Name : in Swagger.Nullable_UString;
       Owner_Name : in Swagger.Nullable_UString;
       Result : out .Models.CartGiftcardAdd200Response_Type);

   --  cart.giftcard.count
   --  Get gift cards count.
   procedure Cart_Giftcard_Count
      (Client : in out Client_Type;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CartGiftcardCount200Response_Type);

   --  cart.giftcard.delete
   --  Delete giftcard
   procedure Cart_Giftcard_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  cart.giftcard.list
   --  Get gift cards list.
   procedure Cart_Giftcard_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartGiftCardList_Type);

   --  cart.info
   --  This method allows you to get various information about the store, including a list of stores (in the case of a multistore configuration), a list of supported languages, currencies, carriers, warehouses, and many other information. This information contains data that is relatively stable and rarely changes, so API2Cart can cache certain data to reduce the load on the store and speed up the execution of the request. We also recommend that you cache the response of this method on your side to save requests. If you need to clear the cache for a specific store, then use the cart.validate method.
   procedure Cart_Info
      (Client : in out Client_Type;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.CartInfo200Response_Type);

   --  cart.list
   --  Get list of supported carts
   procedure Cart_List
      (Client : in out Client_Type;
       Result : out .Models.CartList200Response_Type);

   --  cart.meta_data.list
   --  Using this method, you can get a list of metadata for various entities (products, options, customers, orders). Usually this is data created by third-party plugins.
   procedure Cart_Meta_Data_List
      (Client : in out Client_Type;
       Entity_Id : in Swagger.UString;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Entity : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Key : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartMetaDataList_Type);

   --  cart.meta_data.set
   --  Set meta data for a specific entity
   procedure Cart_Meta_Data_Set
      (Client : in out Client_Type;
       Entity_Id : in Swagger.UString;
       Key : in Swagger.UString;
       Value : in Swagger.UString;
       Namespace : in Swagger.UString;
       Entity : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeAdd200Response_Type);

   --  cart.meta_data.unset
   --  Unset meta data for a specific entity
   procedure Cart_Meta_Data_Unset
      (Client : in out Client_Type;
       Entity_Id : in Swagger.UString;
       Key : in Swagger.UString;
       Id : in Swagger.UString;
       Entity : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketLiveShippingServiceDelete200Response_Type);

   --  cart.methods
   --  Returns a list of supported API methods.
   procedure Cart_Methods
      (Client : in out Client_Type;
       Result : out .Models.CartMethods200Response_Type);

   --  cart.plugin.list
   --  Get a list of third-party plugins installed on the store.
   procedure Cart_Plugin_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CartPluginList200Response_Type);

   --  cart.script.add
   --  Add new script to the storefront
   procedure Cart_Script_Add
      (Client : in out Client_Type;
       Name : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Html : in Swagger.Nullable_UString;
       Src : in Swagger.Nullable_UString;
       Load_Method : in Swagger.Nullable_UString;
       Scope : in Swagger.Nullable_UString;
       Events : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CartScriptAdd200Response_Type);

   --  cart.script.delete
   --  Remove script from the storefront
   procedure Cart_Script_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  cart.script.list
   --  Get scripts installed to the storefront
   procedure Cart_Script_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Script_Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartScriptList_Type);

   --  cart.shipping_zones.list
   --  Get list of shipping zones
   procedure Cart_Shipping_Zones_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCartShippingZonesList_Type);

   --  cart.validate
   --  This method clears the cache in API2Cart for a particular store and checks whether the connection to the store is available. Use this method if there have been any changes in the settings on the storе, for example, if a new plugin has been installed or removed.
   procedure Cart_Validate
      (Client : in out Client_Type;
       Validate_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.CartValidate200Response_Type);

   --  category.add
   --  Add new category in store
   procedure Category_Add
      (Client : in out Client_Type;
       Name : in Swagger.UString;
       Description : in Swagger.Nullable_UString;
       Short_Description : in Swagger.Nullable_UString;
       Parent_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Created_Time : in Swagger.Nullable_UString;
       Modified_Time : in Swagger.Nullable_UString;
       Sort_Order : in Swagger.Nullable_Integer;
       Meta_Title : in Swagger.Nullable_UString;
       Meta_Description : in Swagger.Nullable_UString;
       Meta_Keywords : in Swagger.Nullable_UString;
       Seo_Url : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Stores_Ids : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.CategoryAdd200Response_Type);

   --  category.add.batch
   --  Add new categories to the store.
   procedure Category_Add_Batch
      (Client : in out Client_Type;
       Category_Add_Batch_Type : in .Models.CategoryAddBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  category.assign
   --  Assign category to product
   procedure Category_Assign
      (Client : in out Client_Type;
       Category_Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CartConfigUpdate200Response_Type);

   --  category.count
   --  Count categories in store.
   procedure Category_Count
      (Client : in out Client_Type;
       Parent_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Product_Type : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.CategoryCount200Response_Type);

   --  category.delete
   --  Delete category in store
   procedure Category_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CategoryDelete200Response_Type);

   --  category.find
   --  Search category in store. "Laptop" is specified here by default.
   procedure Category_Find
      (Client : in out Client_Type;
       Find_Value : in Swagger.UString;
       Find_Where : in Swagger.Nullable_UString;
       Find_Params : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.CategoryFind200Response_Type);

   --  category.image.add
   --  Add image to category
   procedure Category_Image_Add
      (Client : in out Client_Type;
       Category_Id : in Swagger.UString;
       Image_Name : in Swagger.UString;
       Url : in Swagger.UString;
       P_Type : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Label : in Swagger.Nullable_UString;
       Mime : in Swagger.Nullable_UString;
       Position : in Swagger.Nullable_Integer;
       Result : out .Models.CategoryImageAdd200Response_Type);

   --  category.image.delete
   --  Delete image
   procedure Category_Image_Delete
      (Client : in out Client_Type;
       Category_Id : in Swagger.UString;
       Image_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  category.info
   --  Get category info about category ID*** or specify other category ID.
   procedure Category_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Schema_Type : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.CategoryInfo200Response_Type);

   --  category.list
   --  Get list of categories from store.
   procedure Category_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Parent_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Product_Type : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Disable_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseCategoryList_Type);

   --  category.unassign
   --  Unassign category to product
   procedure Category_Unassign
      (Client : in out Client_Type;
       Category_Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CartConfigUpdate200Response_Type);

   --  category.update
   --  Update category in store
   procedure Category_Update
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Name : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Short_Description : in Swagger.Nullable_UString;
       Parent_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Sort_Order : in Swagger.Nullable_Integer;
       Modified_Time : in Swagger.Nullable_UString;
       Meta_Title : in Swagger.Nullable_UString;
       Meta_Description : in Swagger.Nullable_UString;
       Meta_Keywords : in Swagger.Nullable_UString;
       Seo_Url : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Stores_Ids : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  customer.add
   --  Add customer into store.
   procedure Customer_Add
      (Client : in out Client_Type;
       Customer_Add_Type : in .Models.CustomerAdd_Type;
       Result : out .Models.CustomerAdd200Response_Type);

   --  customer.address.add
   --  Add customer address.
   procedure Customer_Address_Add
      (Client : in out Client_Type;
       Customer_Address_Add_Type : in .Models.CustomerAddressAdd_Type;
       Result : out .Models.AttributeAdd200Response_Type);

   --  customer.attribute.list
   --  Get attributes for specific customer
   procedure Customer_Attribute_List
      (Client : in out Client_Type;
       Customer_Id : in Swagger.UString;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCustomerAttributeList_Type);

   --  customer.count
   --  Get number of customers from store.
   procedure Customer_Count
      (Client : in out Client_Type;
       Ids : in Swagger.Nullable_UString;
       Since_Id : in Swagger.Nullable_UString;
       Customer_List_Id : in Swagger.Nullable_UString;
       Group_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Result : out .Models.CustomerCount200Response_Type);

   --  customer.delete
   --  Delete customer from store.
   procedure Customer_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Result : out .Models.CustomerDelete200Response_Type);

   --  customer.find
   --  Find customers in store.
   procedure Customer_Find
      (Client : in out Client_Type;
       Find_Value : in Swagger.UString;
       Find_Where : in Swagger.Nullable_UString;
       Find_Params : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CustomerFind200Response_Type);

   --  customer.group.add
   --  Create customer group.
   procedure Customer_Group_Add
      (Client : in out Client_Type;
       Name : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Stores_Ids : in Swagger.Nullable_UString;
       Result : out .Models.CustomerGroupAdd200Response_Type);

   --  customer.group.list
   --  Get list of customers groups.
   procedure Customer_Group_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Group_Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Disable_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseCustomerGroupList_Type);

   --  customer.info
   --  Get customers' details from store.
   procedure Customer_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.CustomerInfo200Response_Type);

   --  customer.list
   --  Get list of customers from store.
   procedure Customer_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Since_Id : in Swagger.Nullable_UString;
       Customer_List_Id : in Swagger.Nullable_UString;
       Group_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Sort_By : in Swagger.Nullable_UString;
       Sort_Direction : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCustomerList_Type);

   --  customer.update
   --  Update information of customer in store.
   procedure Customer_Update
      (Client : in out Client_Type;
       Customer_Update_Type : in .Models.CustomerUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  customer.wishlist.list
   --  Get a Wish List of customer from the store.
   procedure Customer_Wishlist_List
      (Client : in out Client_Type;
       Customer_Id : in Swagger.UString;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseCustomerWishlistList_Type);

   --  marketplace.product.find
   --  Search product in global catalog.
   procedure Marketplace_Product_Find
      (Client : in out Client_Type;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Keyword : in Swagger.Nullable_UString;
       Categories_Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Asin : in Swagger.Nullable_UString;
       Ean : in Swagger.Nullable_UString;
       Gtin : in Swagger.Nullable_UString;
       Upc : in Swagger.Nullable_UString;
       Mpn : in Swagger.Nullable_UString;
       Isbn : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseMarketplaceProductFind_Type);

   --  order.abandoned.list
   --  Get list of orders that were left by customers before completing the order.
   procedure Order_Abandoned_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Customer_Id : in Swagger.Nullable_UString;
       Customer_Email : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Skip_Empty_Email : in Swagger.Nullable_Boolean;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseOrderAbandonedList_Type);

   --  order.add
   --  Add a new order to the cart.
   procedure Order_Add
      (Client : in out Client_Type;
       Order_Add_Type : in .Models.OrderAdd_Type;
       Result : out .Models.OrderAdd200Response_Type);

   --  order.count
   --  Count orders in store
   procedure Order_Count
      (Client : in out Client_Type;
       Order_Ids : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Customer_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Customer_Email : in Swagger.Nullable_UString;
       Order_Status : in Swagger.Nullable_UString;
       Order_Status_Ids : in Swagger.UString_Vectors.Vector;
       Ebay_Order_Status : in Swagger.Nullable_UString;
       Financial_Status : in Swagger.Nullable_UString;
       Financial_Status_Ids : in Swagger.UString_Vectors.Vector;
       Fulfillment_Channel : in Swagger.Nullable_UString;
       Fulfillment_Status : in Swagger.Nullable_UString;
       Shipping_Method : in Swagger.Nullable_UString;
       Delivery_Method : in Swagger.Nullable_UString;
       Tags : in Swagger.Nullable_UString;
       Ship_Node_Type : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Result : out .Models.OrderCount200Response_Type);

   --  order.financial_status.list
   --  Retrieve list of financial statuses
   procedure Order_Financial_Status_List
      (Client : in out Client_Type;
       Result : out .Models.OrderFinancialStatusList200Response_Type);

   --  order.find
   --  This method is deprecated and won't be supported in the future. Please use "order.list" instead.
   procedure Order_Find
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Customer_Id : in Swagger.Nullable_UString;
       Customer_Email : in Swagger.Nullable_UString;
       Order_Status : in Swagger.Nullable_UString;
       Financial_Status : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.OrderFind200Response_Type);

   --  order.fulfillment_status.list
   --  Retrieve list of fulfillment statuses
   procedure Order_Fulfillment_Status_List
      (Client : in out Client_Type;
       Action : in Swagger.Nullable_UString;
       Result : out .Models.OrderFulfillmentStatusList200Response_Type);

   --  order.info
   --  Info about a specific order by ID
   procedure Order_Info
      (Client : in out Client_Type;
       Id : in Swagger.Nullable_UString;
       Order_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Enable_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.OrderInfo200Response_Type);

   --  order.list
   --  Get list of orders from store.
   procedure Order_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Order_Ids : in Swagger.Nullable_UString;
       Since_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Customer_Id : in Swagger.Nullable_UString;
       Customer_Email : in Swagger.Nullable_UString;
       Basket_Id : in Swagger.Nullable_UString;
       Currency_Id : in Swagger.Nullable_UString;
       Phone : in Swagger.Nullable_UString;
       Order_Status : in Swagger.Nullable_UString;
       Order_Status_Ids : in Swagger.UString_Vectors.Vector;
       Ebay_Order_Status : in Swagger.Nullable_UString;
       Financial_Status : in Swagger.Nullable_UString;
       Financial_Status_Ids : in Swagger.UString_Vectors.Vector;
       Fulfillment_Status : in Swagger.Nullable_UString;
       Return_Status : in Swagger.Nullable_UString;
       Fulfillment_Channel : in Swagger.Nullable_UString;
       Shipping_Method : in Swagger.Nullable_UString;
       Skip_Order_Ids : in Swagger.Nullable_UString;
       Is_Deleted : in Swagger.Nullable_Boolean;
       Shipping_Country_Iso_3 : in Swagger.Nullable_UString;
       Delivery_Method : in Swagger.Nullable_UString;
       Ship_Node_Type : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Tags : in Swagger.Nullable_UString;
       Sort_By : in Swagger.Nullable_UString;
       Sort_Direction : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Enable_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseOrderList_Type);

   --  order.preestimate_shipping.list
   --  Retrieve list of order preestimated shipping methods
   procedure Order_Preestimate_Shipping_List
      (Client : in out Client_Type;
       Order_Preestimate_Shipping_List_Type : in .Models.OrderPreestimateShippingList_Type;
       Result : out .Models.ModelResponseOrderPreestimateShippingList_Type);

   --  order.refund.add
   --  Add a refund to the order.
   procedure Order_Refund_Add
      (Client : in out Client_Type;
       Order_Refund_Add_Type : in .Models.OrderRefundAdd_Type;
       Result : out .Models.OrderRefundAdd200Response_Type);

   --  order.return.add
   --  Create new return request.
   procedure Order_Return_Add
      (Client : in out Client_Type;
       Order_Return_Add_Type : in .Models.OrderReturnAdd_Type;
       Result : out .Models.OrderReturnAdd200Response_Type);

   --  order.return.delete
   --  Delete return.
   procedure Order_Return_Delete
      (Client : in out Client_Type;
       Return_Id : in Swagger.UString;
       Order_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeValueDelete200Response_Type);

   --  order.return.update
   --  Update order's shipment information.
   procedure Order_Return_Update
      (Client : in out Client_Type;
       Order_Return_Update_Type : in .Models.OrderReturnUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  order.shipment.add
   --  Add a shipment to the order.
   procedure Order_Shipment_Add
      (Client : in out Client_Type;
       Order_Shipment_Add_Type : in .Models.OrderShipmentAdd_Type;
       Result : out .Models.OrderShipmentAdd200Response_Type);

   --  order.shipment.add.batch
   --  Add a shipments to the orders.
   procedure Order_Shipment_Add_Batch
      (Client : in out Client_Type;
       Order_Shipment_Add_Batch_Type : in .Models.OrderShipmentAddBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  order.shipment.delete
   --  Delete order's shipment.
   procedure Order_Shipment_Delete
      (Client : in out Client_Type;
       Shipment_Id : in Swagger.UString;
       Order_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.OrderShipmentDelete200Response_Type);

   --  order.shipment.info
   --  Get information of shipment.
   procedure Order_Shipment_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Order_Id : in Swagger.UString;
       Start : in Swagger.Nullable_Integer;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.OrderShipmentInfo200Response_Type);

   --  order.shipment.list
   --  Get list of shipments by orders.
   procedure Order_Shipment_List
      (Client : in out Client_Type;
       Order_Id : in Swagger.UString;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseOrderShipmentList_Type);

   --  order.shipment.tracking.add
   --  Add order shipment's tracking info.
   procedure Order_Shipment_Tracking_Add
      (Client : in out Client_Type;
       Order_Shipment_Tracking_Add_Type : in .Models.OrderShipmentTrackingAdd_Type;
       Result : out .Models.OrderShipmentTrackingAdd200Response_Type);

   --  order.shipment.update
   --  Update order's shipment information.
   procedure Order_Shipment_Update
      (Client : in out Client_Type;
       Order_Shipment_Update_Type : in .Models.OrderShipmentUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  order.status.list
   --  Retrieve list of statuses
   procedure Order_Status_List
      (Client : in out Client_Type;
       Store_Id : in Swagger.Nullable_UString;
       Action : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseOrderStatusList_Type);

   --  order.transaction.list
   --  Retrieve list of order transaction
   procedure Order_Transaction_List
      (Client : in out Client_Type;
       Order_Ids : in Swagger.UString;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseOrderTransactionList_Type);

   --  order.update
   --  Update existing order.
   procedure Order_Update
      (Client : in out Client_Type;
       Order_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Order_Status : in Swagger.Nullable_UString;
       Financial_Status : in Swagger.Nullable_UString;
       Fulfillment_Status : in Swagger.Nullable_UString;
       Cancellation_Reason : in Swagger.Nullable_UString;
       Order_Payment_Method : in Swagger.Nullable_UString;
       Comment : in Swagger.Nullable_UString;
       Admin_Comment : in Swagger.Nullable_UString;
       Admin_Private_Comment : in Swagger.Nullable_UString;
       Invoice_Admin_Comment : in Swagger.Nullable_UString;
       Date_Modified : in Swagger.Nullable_UString;
       Date_Finished : in Swagger.Nullable_UString;
       Send_Notifications : in Swagger.Nullable_Boolean;
       Create_Invoice : in Swagger.Nullable_Boolean;
       Origin : in Swagger.Nullable_UString;
       Tags : in Swagger.Nullable_UString;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.add
   --  Add new product to store.
   procedure Product_Add
      (Client : in out Client_Type;
       Product_Add_Type : in .Models.ProductAdd_Type;
       Result : out .Models.ProductAdd200Response_Type);

   --  product.add.batch
   --  Add new products to the store.
   procedure Product_Add_Batch
      (Client : in out Client_Type;
       Product_Add_Batch_Type : in .Models.ProductAddBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  product.attribute.list
   --  Get list of attributes and values.
   procedure Product_Attribute_List
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Attribute_Id : in Swagger.Nullable_UString;
       Variant_Id : in Swagger.Nullable_UString;
       Attribute_Group_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Set_Name : in Swagger.Nullable_UString;
       Sort_By : in Swagger.Nullable_UString;
       Sort_Direction : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseProductAttributeList_Type);

   --  product.attribute.value.set
   --  Set attribute value to product.
   procedure Product_Attribute_Value_Set
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Attribute_Id : in Swagger.Nullable_UString;
       Attribute_Group_Id : in Swagger.Nullable_UString;
       Attribute_Name : in Swagger.Nullable_UString;
       Value : in Swagger.Nullable_UString;
       Value_Id : in Swagger.Nullable_Integer;
       Lang_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.ProductAttributeValueSet200Response_Type);

   --  product.attribute.value.unset
   --  Removes attribute value for a product.
   procedure Product_Attribute_Value_Unset
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Attribute_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Include_Default : in Swagger.Nullable_Boolean;
       Reindex : in Swagger.Nullable_Boolean;
       Clear_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductAttributeValueUnset200Response_Type);

   --  product.brand.list
   --  Get list of brands from your store.
   procedure Product_Brand_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Brand_Ids : in Swagger.Nullable_UString;
       Category_Id : in Swagger.Nullable_UString;
       Parent_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseProductBrandList_Type);

   --  product.child_item.find
   --  Search product child item (bundled item or configurable product variant) in store catalog.
   procedure Product_Child_Item_Find
      (Client : in out Client_Type;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Find_Params : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.ProductChildItemFind200Response_Type);

   --  product.child_item.info
   --  Get child for specific product.
   procedure Product_Child_Item_Info
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Currency_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductChildItemInfo200Response_Type);

   --  product.child_item.list
   --  Get a list of a product's child items, such as variants or bundle components. The total_count field in the response indicates the total number of items in the context of the current filter.
   procedure Product_Child_Item_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Product_Id : in Swagger.Nullable_UString;
       Product_Ids : in Swagger.Nullable_UString;
       Sku : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Currency_Id : in Swagger.Nullable_UString;
       Avail_Sale : in Swagger.Nullable_Boolean;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Return_Global : in Swagger.Nullable_Boolean;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseProductChildItemList_Type);

   --  product.count
   --  Count products in store.
   procedure Product_Count
      (Client : in out Client_Type;
       Product_Ids : in Swagger.Nullable_UString;
       Since_Id : in Swagger.Nullable_UString;
       Categories_Ids : in Swagger.Nullable_UString;
       Category_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Avail_View : in Swagger.Nullable_Boolean;
       Avail_Sale : in Swagger.Nullable_Boolean;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Brand_Name : in Swagger.Nullable_UString;
       Product_Attributes : in Swagger.UString_Vectors.Vector;
       Status : in Swagger.Nullable_UString;
       P_Type : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Return_Global : in Swagger.Nullable_Boolean;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductCount200Response_Type);

   --  product.currency.add
   --  Add currency and/or set default in store
   procedure Product_Currency_Add
      (Client : in out Client_Type;
       Iso_3 : in Swagger.UString;
       Rate : in Swagger.Number;
       Name : in Swagger.Nullable_UString;
       Avail : in Swagger.Nullable_Boolean;
       Symbol_Left : in Swagger.Nullable_UString;
       Symbol_Right : in Swagger.Nullable_UString;
       Default : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductCurrencyAdd200Response_Type);

   --  product.currency.list
   --  Get list of currencies
   procedure Product_Currency_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Default : in Swagger.Nullable_Boolean;
       Avail : in Swagger.Nullable_Boolean;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseProductCurrencyList_Type);

   --  product.delete
   --  Product delete
   procedure Product_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.CustomerDelete200Response_Type);

   --  product.delete.batch
   --  Remove product from the store.
   procedure Product_Delete_Batch
      (Client : in out Client_Type;
       Product_Delete_Batch_Type : in .Models.ProductDeleteBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  product.fields
   --  Retrieve all available fields for product item in store.
   procedure Product_Fields
      (Client : in out Client_Type;
       Result : out .Models.CartConfigUpdate200Response_Type);

   --  product.find
   --  Search product in store catalog. "Apple" is specified here by default.
   procedure Product_Find
      (Client : in out Client_Type;
       Find_Value : in Swagger.UString;
       Find_Where : in Swagger.Nullable_UString;
       Find_Params : in Swagger.Nullable_UString;
       Find_What : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.ProductFind200Response_Type);

   --  product.image.add
   --  Add image to product
   procedure Product_Image_Add
      (Client : in out Client_Type;
       Product_Image_Add_Type : in .Models.ProductImageAdd_Type;
       Result : out .Models.ProductImageAdd200Response_Type);

   --  product.image.delete
   --  Delete image
   procedure Product_Image_Delete
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.image.update
   --  Update details of image
   procedure Product_Image_Update
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Id : in Swagger.UString;
       Variant_Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Image_Name : in Swagger.Nullable_UString;
       P_Type : in Swagger.Nullable_UString;
       Label : in Swagger.Nullable_UString;
       Position : in Swagger.Nullable_Integer;
       Hidden : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductImageUpdate200Response_Type);

   --  product.info
   --  Get information about a specific product by its ID. In the case of a multistore configuration, use the store_id filter to get a response in the context of a specific store.
   procedure Product_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Currency_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductInfo200Response_Type);

   --  product.list
   --  Get list of products from your store. Returns 10 products by default.
   procedure Product_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Product_Ids : in Swagger.Nullable_UString;
       Since_Id : in Swagger.Nullable_UString;
       Categories_Ids : in Swagger.Nullable_UString;
       Category_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Currency_Id : in Swagger.Nullable_UString;
       Avail_View : in Swagger.Nullable_Boolean;
       Avail_Sale : in Swagger.Nullable_Boolean;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Sku : in Swagger.Nullable_UString;
       Brand_Name : in Swagger.Nullable_UString;
       Product_Attributes : in Swagger.UString_Vectors.Vector;
       Status : in Swagger.Nullable_UString;
       P_Type : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Return_Global : in Swagger.Nullable_Boolean;
       Params : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Sort_By : in Swagger.Nullable_UString;
       Sort_Direction : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Cache : in Swagger.Nullable_Boolean;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Use_Latest_Api_Version : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseProductList_Type);

   --  product.manufacturer.add
   --  Add manufacturer to store and assign to product
   procedure Product_Manufacturer_Add
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Manufacturer : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.ProductManufacturerAdd200Response_Type);

   --  product.option.add
   --  Add product option from store.
   procedure Product_Option_Add
      (Client : in out Client_Type;
       Product_Option_Add_Type : in .Models.ProductOptionAdd_Type;
       Result : out .Models.ProductOptionAdd200Response_Type);

   --  product.option.assign
   --  Assign option from product.
   procedure Product_Option_Assign
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Option_Id : in Swagger.UString;
       Required : in Swagger.Nullable_Boolean;
       Sort_Order : in Swagger.Nullable_Integer;
       Option_Values : in Swagger.Nullable_UString;
       Clear_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductOptionAssign200Response_Type);

   --  product.option.delete
   --  Product option delete.
   procedure Product_Option_Delete
      (Client : in out Client_Type;
       Option_Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.option.list
   --  Get list of options.
   procedure Product_Option_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Product_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseProductOptionList_Type);

   --  product.option.value.add
   --  Add product option item from option.
   procedure Product_Option_Value_Add
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Option_Id : in Swagger.UString;
       Option_Value : in Swagger.Nullable_UString;
       Sort_Order : in Swagger.Nullable_Integer;
       Display_Value : in Swagger.Nullable_UString;
       Is_Default : in Swagger.Nullable_Boolean;
       Clear_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductOptionValueAdd200Response_Type);

   --  product.option.value.assign
   --  Assign product option item from product.
   procedure Product_Option_Value_Assign
      (Client : in out Client_Type;
       Product_Option_Id : in Integer;
       Option_Value_Id : in Swagger.UString;
       Clear_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductOptionValueAssign200Response_Type);

   --  product.option.value.delete
   --  Product option value delete.
   procedure Product_Option_Value_Delete
      (Client : in out Client_Type;
       Option_Id : in Swagger.UString;
       Option_Value_Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.option.value.update
   --  Update product option item from option.
   procedure Product_Option_Value_Update
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Option_Id : in Swagger.UString;
       Option_Value_Id : in Swagger.UString;
       Option_Value : in Swagger.Nullable_UString;
       Price : in Swagger.Number;
       Quantity : in Swagger.Number;
       Display_Value : in Swagger.Nullable_UString;
       Clear_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.price.add
   --  Add some prices to the product.
   procedure Product_Price_Add
      (Client : in out Client_Type;
       Product_Price_Add_Type : in .Models.ProductPriceAdd_Type;
       Result : out .Models.CartValidate200Response_Type);

   --  product.price.delete
   --  Delete some prices of the product
   procedure Product_Price_Delete
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Group_Prices : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.price.update
   --  Update some prices of the product.
   procedure Product_Price_Update
      (Client : in out Client_Type;
       Product_Price_Update_Type : in .Models.ProductPriceUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.review.list
   --  Get reviews of a specific product.
   procedure Product_Review_List
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Ids : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseProductReviewList_Type);

   --  product.store.assign
   --  Assign product to store
   procedure Product_Store_Assign
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.UString;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.tax.add
   --  Add tax class and tax rate to store and assign to product.
   procedure Product_Tax_Add
      (Client : in out Client_Type;
       Product_Tax_Add_Type : in .Models.ProductTaxAdd_Type;
       Result : out .Models.ProductTaxAdd200Response_Type);

   --  product.update
   --  This method can be used to update certain product data. The list of supported parameters depends on the specific platform. Please transmit only those parameters that are supported by the particular platform. Please note that to update the product quantity, it is recommended to use relative parameters (increase_quantity or reduce_quantity) to avoid unexpected overwrites on heavily loaded stores.
   procedure Product_Update
      (Client : in out Client_Type;
       Product_Update_Type : in .Models.ProductUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.update.batch
   --  Update products on the store.
   procedure Product_Update_Batch
      (Client : in out Client_Type;
       Product_Update_Batch_Type : in .Models.ProductUpdateBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  product.variant.add
   --  Add variant to product.
   procedure Product_Variant_Add
      (Client : in out Client_Type;
       Product_Variant_Add_Type : in .Models.ProductVariantAdd_Type;
       Result : out .Models.ProductVariantAdd200Response_Type);

   --  product.variant.add.batch
   --  Add new product variants to the store.
   procedure Product_Variant_Add_Batch
      (Client : in out Client_Type;
       Product_Variant_Add_Batch_Type : in .Models.ProductVariantAddBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  product.variant.count
   --  Get count variants.
   procedure Product_Variant_Count
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Category_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Result : out .Models.ProductVariantCount200Response_Type);

   --  product.variant.delete
   --  Delete variant.
   procedure Product_Variant_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeValueDelete200Response_Type);

   --  product.variant.delete.batch
   --  Remove product variants from the store.
   procedure Product_Variant_Delete_Batch
      (Client : in out Client_Type;
       Product_Variant_Delete_Batch_Type : in .Models.ProductVariantDeleteBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  product.variant.image.add
   --  Add image to product
   procedure Product_Variant_Image_Add
      (Client : in out Client_Type;
       Product_Variant_Image_Add_Type : in .Models.ProductVariantImageAdd_Type;
       Result : out .Models.ProductVariantImageAdd200Response_Type);

   --  product.variant.image.delete
   --  Delete  image to product
   procedure Product_Variant_Image_Delete
      (Client : in out Client_Type;
       Product_Id : in Swagger.UString;
       Product_Variant_Id : in Swagger.UString;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.variant.info
   --  Get variant info. This method is deprecated, and its development is stopped. Please use "product.child_item.info" instead.
   procedure Product_Variant_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ProductInfo200Response_Type);

   --  product.variant.list
   --  Get a list of variants. This method is deprecated, and its development is stopped. Please use "product.child_item.list" instead.
   procedure Product_Variant_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Product_Id : in Swagger.Nullable_UString;
       Category_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ProductVariantList200Response_Type);

   --  product.variant.price.add
   --  Add some prices to the product variant.
   procedure Product_Variant_Price_Add
      (Client : in out Client_Type;
       Product_Variant_Price_Add_Type : in .Models.ProductVariantPriceAdd_Type;
       Result : out .Models.CartValidate200Response_Type);

   --  product.variant.price.delete
   --  Delete some prices of the product variant.
   procedure Product_Variant_Price_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Product_Id : in Swagger.UString;
       Group_Prices : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  product.variant.price.update
   --  Update some prices of the product variant.
   procedure Product_Variant_Price_Update
      (Client : in out Client_Type;
       Product_Variant_Price_Update_Type : in .Models.ProductVariantPriceUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.variant.update
   --  Update variant.
   procedure Product_Variant_Update
      (Client : in out Client_Type;
       Product_Variant_Update_Type : in .Models.ProductVariantUpdate_Type;
       Result : out .Models.AccountConfigUpdate200Response_Type);

   --  product.variant.update.batch
   --  Update products variants on the store.
   procedure Product_Variant_Update_Batch
      (Client : in out Client_Type;
       Product_Variant_Update_Batch_Type : in .Models.ProductVariantUpdateBatch_Type;
       Result : out .Models.CategoryAddBatch200Response_Type);

   --  return.action.list
   --  Retrieve list of return actions
   procedure Return_Action_List
      (Client : in out Client_Type;
       Result : out .Models.ReturnActionList200Response_Type);

   --  return.count
   --  Count returns in store
   procedure Return_Count
      (Client : in out Client_Type;
       Order_Ids : in Swagger.Nullable_UString;
       Customer_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Return_Type : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ReturnCount200Response_Type);

   --  return.info
   --  Retrieve return information.
   procedure Return_Info
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Order_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ReturnInfo200Response_Type);

   --  return.list
   --  Get list of return requests from store.
   procedure Return_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Order_Id : in Swagger.Nullable_UString;
       Order_Ids : in Swagger.Nullable_UString;
       Customer_Id : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Return_Type : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Report_Request_Id : in Swagger.Nullable_UString;
       Disable_Report_Cache : in Swagger.Nullable_Boolean;
       Result : out .Models.ModelResponseReturnList_Type);

   --  return.reason.list
   --  Retrieve list of return reasons
   procedure Return_Reason_List
      (Client : in out Client_Type;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.ReturnReasonList200Response_Type);

   --  return.status.list
   --  Retrieve list of statuses
   procedure Return_Status_List
      (Client : in out Client_Type;
       Result : out .Models.ReturnStatusList200Response_Type);

   --  subscriber.list
   --  Get subscribers list
   procedure Subscriber_List
      (Client : in out Client_Type;
       Ids : in Swagger.Nullable_UString;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Subscribed : in Swagger.Nullable_Boolean;
       Store_Id : in Swagger.Nullable_UString;
       Email : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseSubscriberList_Type);

   --  tax.class.info
   --  Use this method to get information about a tax class and its rates. It allows you to calculate the tax percentage for a specific customer's address. This information contains relatively static data that rarely changes, so API2Cart may cache certain data to reduce the load on the store and speed up request execution. We also recommend that you cache the response of this method on your side to save requests. If you need to clear the cache for a specific store, use the cart.validate method.
   procedure Tax_Class_Info
      (Client : in out Client_Type;
       Tax_Class_Id : in Swagger.UString;
       Store_Id : in Swagger.Nullable_UString;
       Lang_Id : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Exclude : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseTaxClassInfo_Type);

   --  tax.class.list
   --  Get list of tax classes from your store.
   procedure Tax_Class_List
      (Client : in out Client_Type;
       Count : in Swagger.Nullable_Integer;
       Page_Cursor : in Swagger.Nullable_UString;
       Store_Id : in Swagger.Nullable_UString;
       Find_Value : in Swagger.Nullable_UString;
       Find_Where : in Swagger.Nullable_UString;
       Created_To : in Swagger.Nullable_UString;
       Created_From : in Swagger.Nullable_UString;
       Modified_To : in Swagger.Nullable_UString;
       Modified_From : in Swagger.Nullable_UString;
       Response_Fields : in Swagger.Nullable_UString;
       Result : out .Models.ModelResponseTaxClassList_Type);

   --  webhook.count
   --  Count registered webhooks on the store.
   procedure Webhook_Count
      (Client : in out Client_Type;
       Entity : in Swagger.Nullable_UString;
       Action : in Swagger.Nullable_UString;
       Active : in Swagger.Nullable_Boolean;
       Result : out .Models.WebhookCount200Response_Type);

   --  webhook.create
   --  Create webhook on the store and subscribe to it.
   procedure Webhook_Create
      (Client : in out Client_Type;
       Entity : in Swagger.UString;
       Action : in Swagger.UString;
       Callback : in Swagger.Nullable_UString;
       Label : in Swagger.Nullable_UString;
       Fields : in Swagger.Nullable_UString;
       Active : in Swagger.Nullable_Boolean;
       Store_Id : in Swagger.Nullable_UString;
       Result : out .Models.BasketLiveShippingServiceCreate200Response_Type);

   --  webhook.delete
   --  Delete registered webhook on the store.
   procedure Webhook_Delete
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Result : out .Models.AttributeDelete200Response_Type);

   --  webhook.events
   --  List all Webhooks that are available on this store.
   procedure Webhook_Events
      (Client : in out Client_Type;
       Result : out .Models.WebhookEvents200Response_Type);

   --  webhook.list
   --  List registered webhook on the store.
   procedure Webhook_List
      (Client : in out Client_Type;
       Start : in Swagger.Nullable_Integer;
       Count : in Swagger.Nullable_Integer;
       Entity : in Swagger.Nullable_UString;
       Action : in Swagger.Nullable_UString;
       Active : in Swagger.Nullable_Boolean;
       Ids : in Swagger.Nullable_UString;
       Params : in Swagger.Nullable_UString;
       Result : out .Models.WebhookList200Response_Type);

   --  webhook.update
   --  Update Webhooks parameters.
   procedure Webhook_Update
      (Client : in out Client_Type;
       Id : in Swagger.UString;
       Callback : in Swagger.Nullable_UString;
       Label : in Swagger.Nullable_UString;
       Fields : in Swagger.Nullable_UString;
       Active : in Swagger.Nullable_Boolean;
       Result : out .Models.ProductImageUpdate200Response_Type);

end .Clients;
